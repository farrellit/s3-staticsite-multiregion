AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  StandbyReplBucketArn:
    Type: String
    Description: This is the bucket arn in the standby region

Outputs:
  HealthCheckId:
    Description: "Physical ID of healthcheck"
    Value: !Ref PrimaryHealthCheck
  PrimaryS3BucketArn:
    Description: "Full S3 Bucket Arn"
    Value: !Join [ "", [ 'arn:aws:s3:::' , !Ref PrimaryBucket ] ]
Resources:
  # Create a bucket
  PrimaryBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      ReplicationConfiguration:
        Role: !GetAtt StaticS3ReplRole.Arn
        Rules:
          - Id: ReplAll
            Status: Enabled
            Prefix: ""
            Destination:
              Bucket: !Ref StandbyReplBucketArn
  # Role for the bucket
  StaticS3ReplRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [s3.amazonaws.com]
  # Policy for the role
  BucketBackupPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action: ['s3:GetReplicationConfiguration', 's3:ListBucket']
          Effect: Allow
          Resource:
          - !Join ['', ['arn:aws:s3:::', !Ref 'PrimaryBucket']]
        - Action: ['s3:GetObjectVersion', 's3:GetObjectVersionAcl']
          Effect: Allow
          Resource:
          - !Join ['', ['arn:aws:s3:::', !Ref 'PrimaryBucket', /*]]
        - Action: ['s3:ReplicateObject', 's3:ReplicateDelete']
          Effect: Allow
          Resource:
          - !Join ['', [ !Ref StandbyReplBucketArn, /* ] ]
      PolicyName: BucketBackupPolicy
      Roles: [ !Ref 'StaticS3ReplRole' ]

  PrimaryHealthCheck:
    Type: "AWS::Route53::HealthCheck"
    Properties:
      HealthCheckConfig:
        FullyQualifiedDomainName: !Join [ '.', [ !Join [ '-', [ "s3", !Ref "AWS::Region" ] ], "amazonaws.com" ] ]
        Type: "HTTPS"
        ResourcePath: !Join [ '/', [ '', !Ref 'PrimaryBucket', 'index.html' ] ]
      HealthCheckTags:
        - Key: "Name"
          Value: "PrimaryBucketHealthCheck"

#  myDistribution:
#    Type: AWS::CloudFront::Distribution
#    Properties:
#      DistributionConfig:
#        Origins:
#        - DomainName: mybucket.s3.amazonaws.com
#          Id: myS3Origin
#          S3OriginConfig:
#            OriginAccessIdentity: origin-access-identity/cloudfront/E127EXAMPLE51Z
#        Enabled: 'true'
#        Comment: Some comment
#        DefaultRootObject: index.html
#        Logging:
#          IncludeCookies: 'false'
#          Bucket: mylogs.s3.amazonaws.com
#          Prefix: myprefix
#        Aliases:
#        - mysite.example.com
#        - yoursite.example.com
#        DefaultCacheBehavior:
#          AllowedMethods:
#          - DELETE
#          - GET
#          - HEAD
#          - OPTIONS
#          - PATCH
#          - POST
#          - PUT
#          TargetOriginId: myS3Origin
#          ForwardedValues:
#            QueryString: 'false'
#            Cookies:
#              Forward: none
#          TrustedSigners:
#          - 1234567890EX
#          - 1234567891EX
#          ViewerProtocolPolicy: allow-all
#        PriceClass: PriceClass_200
#        Restrictions:
#          GeoRestriction:
#            RestrictionType: whitelist
#            Locations:
#            - AQ
#            - CV
#        ViewerCertificate:
#          CloudFrontDefaultCertificate: 'true'
